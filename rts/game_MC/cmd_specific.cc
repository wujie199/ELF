/**
* Copyright (c) 2017-present, Facebook, Inc.
* All rights reserved.

* This source code is licensed under the BSD-style license found in the
* LICENSE file in the root directory of this source tree.
*/

#include "engine/cmd.h"
#include "engine/game_env.h"
#include "engine/cmd_receiver.h"

// Derived class. Note that the definition is automatically generated by a python file.
#include "engine/cmd.gen.h"
#include "engine/cmd_specific.gen.h"
#include "cmd_specific.gen.h"
#include <cstdlib>

bool CmdGenerateMap::run(GameEnv *env, CmdReceiver*) {
    return env->GenerateMap(_num_obstacles, _init_resource) ? true : false;
}

#define _CREATE(...) receiver->SendCmd(CmdIPtr(new CmdCreate(INVALID, __VA_ARGS__)))
#define _CHANGE_RES(...) receiver->SendCmd(CmdIPtr(new CmdChangePlayerResource(INVALID, __VA_ARGS__)))


bool CmdGameStartSpecific::run(GameEnv*, CmdReceiver* receiver) {
    const PlayerId player_id = 0;
    const PlayerId enemy_id = 1;
    _CREATE(RESOURCE, PointF(2, 1), player_id);
    _CREATE(WORKER, PointF(4, 4), player_id);
    _CREATE(WORKER, PointF(5, 5), player_id);
    _CREATE(WORKER, PointF(6, 7), player_id);
    //_CREATE(RANGE_ATTACKER, PointF(15, 18), player_id);
    _CREATE(BASE, PointF(7, 2), player_id);
    //_CREATE(BARRACKS, PointF(8, 5), player_id);
    _CHANGE_RES(player_id, 100);
    
    _CREATE(BASE, PointF(18, 16), enemy_id);
    //_CREATE(WORKER, PointF(17, 15), enemy_id);
    //_CREATE(WORKER, PointF(18, 15), enemy_id);
    //_CREATE(WORKER, PointF(19, 16), enemy_id);
    _CREATE(RESOURCE, PointF(14, 18), enemy_id);
    //_CREATE(RANGE_ATTACKER, PointF(12, 11), enemy_id);
    _CHANGE_RES(enemy_id, 100);

    return true;
}

bool CmdGenerateUnit::run(GameEnv *env, CmdReceiver *receiver) {
    const PlayerId player_id = 0;
    const PlayerId enemy_id = 1;

    _CREATE(BASE, PointF(10, 19), player_id);
    _CREATE(RESOURCE,PointF(1,19),player_id);
    _CREATE(RANGE_ATTACKER, PointF(5,19), player_id);
    _CREATE(RANGE_ATTACKER, PointF(5.111,17.9518316), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(5.333,17.2050317245), player_id);
    _CREATE(RANGE_ATTACKER, PointF(5.7898,16.30386139), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(6.555,15.37619), player_id);
    _CREATE(RANGE_ATTACKER, PointF(6.8888,15.08567329), player_id);
    _CREATE(RANGE_ATTACKER, PointF(8.2569,14.313679), player_id);
    _CREATE(RANGE_ATTACKER, PointF(8.9446,14112656054), player_id);

    _CREATE(RANGE_ATTACKER, PointF(10.328,14.010769999), player_id);
    _CREATE(RANGE_ATTACKER, PointF(12.2314,14.5255330), player_id);
    _CREATE(RANGE_ATTACKER, PointF(13.3556,15.2932563293), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(13.326,15.26666), player_id);
    _CREATE(RANGE_ATTACKER, PointF(14.219533,16.31754939), player_id);
    _CREATE(RANGE_ATTACKER, PointF(14.5029,16.82654), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(14.80719,17.62489116), player_id);
    _CREATE(RANGE_ATTACKER, PointF(14.99,18.68393038741442), player_id);

    // _CREATE(RANGE_ATTACKER, PointF(9.5,19), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(10.5,19), player_id);
    //  _CREATE(WORKER, PointF(1,19), player_id);

    _CHANGE_RES(player_id, 1);

    // _CREATE(WORKER,PointF(1,5),enemy_id);
    // _CREATE(WORKER,PointF(3,4),enemy_id);
    // _CREATE(WORKER,PointF(2,3),enemy_id);
    // _CREATE(WORKER,PointF(4,2),enemy_id);
    // _CREATE(BARRACKS,PointF(2,5),enemy_id);
    // _CREATE(WORKER,PointF(11,3),enemy_id);

    unsigned seed;
    seed = time(0);
    srand(seed);
    int x = rand() % 19 + 1;
    int y = rand() % 8 + 1;

    
    _CHANGE_RES(enemy_id, 420);
    _CREATE(RESOURCE,PointF(1,1),enemy_id);
    _CREATE(BASE, PointF(x, y), enemy_id);
    // _CREATE(BASE, PointF(0, 5), enemy_id);
    // _CREATE(BASE, PointF(19, 5), enemy_id);
    // _CREATE(WORKER, PointF(2, 1), enemy_id);
    return true;
}

#undef _CHANGE_RES
#undef _CREATE
