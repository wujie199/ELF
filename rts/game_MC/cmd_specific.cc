/**
* Copyright (c) 2017-present, Facebook, Inc.
* All rights reserved.

* This source code is licensed under the BSD-style license found in the
* LICENSE file in the root directory of this source tree.
*/

#include "engine/cmd.h"
#include "engine/game_env.h"
#include "engine/cmd_receiver.h"

// Derived class. Note that the definition is automatically generated by a python file.
#include "engine/cmd.gen.h"
#include "engine/cmd_specific.gen.h"
#include "cmd_specific.gen.h"
#include <cstdlib>

bool CmdGenerateMap::run(GameEnv *env, CmdReceiver*) {
    return env->GenerateMap(_num_obstacles, _init_resource) ? true : false;
}

#define _CREATE(...) receiver->SendCmd(CmdIPtr(new CmdCreate(INVALID, __VA_ARGS__)))
#define _CHANGE_RES(...) receiver->SendCmd(CmdIPtr(new CmdChangePlayerResource(INVALID, __VA_ARGS__)))


bool CmdGameStartSpecific::run(GameEnv*, CmdReceiver* receiver) {
    const PlayerId player_id = 0;
    const PlayerId enemy_id = 1;
    _CREATE(RESOURCE, PointF(2, 1), player_id);
    _CREATE(WORKER, PointF(4, 4), player_id);
    _CREATE(WORKER, PointF(5, 5), player_id);
    _CREATE(WORKER, PointF(6, 7), player_id);
    //_CREATE(RANGE_ATTACKER, PointF(15, 18), player_id);
    _CREATE(BASE, PointF(7, 2), player_id);
    //_CREATE(BARRACKS, PointF(8, 5), player_id);
    _CHANGE_RES(player_id, 100);
    
    _CREATE(BASE, PointF(18, 16), enemy_id);
    //_CREATE(WORKER, PointF(17, 15), enemy_id);
    //_CREATE(WORKER, PointF(18, 15), enemy_id);
    //_CREATE(WORKER, PointF(19, 16), enemy_id);
    _CREATE(RESOURCE, PointF(14, 18), enemy_id);
    //_CREATE(RANGE_ATTACKER, PointF(12, 11), enemy_id);
    _CHANGE_RES(enemy_id, 100);

    return true;
}

bool CmdGenerateUnit::run(GameEnv *env, CmdReceiver *receiver) {
    const PlayerId player_id = 0;
    const PlayerId enemy_id = 1;

    _CREATE(BASE, PointF(17, 34), player_id);
    _CREATE(RESOURCE,PointF(16,34),player_id);
    _CREATE(RESOURCE,PointF(18,34),player_id);
    _CREATE(RANGE_ATTACKER, PointF(11,34), player_id);
    _CREATE(RANGE_ATTACKER, PointF(12,30.68337520), player_id);
    _CREATE(RANGE_ATTACKER, PointF(13,29.527864045000), player_id);
    _CREATE(RANGE_ATTACKER, PointF(14,28.80384757729), player_id);
    _CREATE(RANGE_ATTACKER, PointF(15,28.3431457505), player_id);
    _CREATE(RANGE_ATTACKER, PointF(16,28.0839202169), player_id);
    _CREATE(RANGE_ATTACKER, PointF(17,28), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(24,39), player_id);

    _CREATE(RANGE_ATTACKER, PointF(18,28.0839202169), player_id);
    _CREATE(RANGE_ATTACKER, PointF(19,28.3431457505), player_id);
    _CREATE(RANGE_ATTACKER, PointF(20,28.8038475), player_id);
    //_CREATE(RANGE_ATTACKER, PointF(29.5,40.648353455754965), player_id);
    _CREATE(RANGE_ATTACKER, PointF(21,29.527864045), player_id);
    _CREATE(RANGE_ATTACKER, PointF(22,30.68337520), player_id);
    // _CREATE(RANGE_ATTACKER, PointF(33,44.6411010564593), player_id);
    _CREATE(RANGE_ATTACKER, PointF(23,34), player_id);

    _CHANGE_RES(player_id, 1);

    // 基地随机数
    unsigned seed;
    seed = time(0);
    srand(seed);
    int x = rand() % 34 + 1;
    int y = rand() % 2 + 1;

    _CHANGE_RES(enemy_id, 640);
    _CREATE(RESOURCE,PointF(0,0),enemy_id);
    _CREATE(BASE, PointF(x, y), enemy_id);
    return true;
}

#undef _CHANGE_RES
#undef _CREATE
